<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.entity.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, username, password
    </sql>
    <insert id="insert" parameterType="com.entity.User">
    insert into user (id, username, password
    )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}
    )
    </insert>
    <insert id="insertSelective" parameterType="com.entity.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <update id="updateByIdSelective" parameterType="com.entity.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateById" parameterType="com.entity.User">
        update user
        set username = #{username,jdbcType=VARCHAR},
            password = #{password,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectAllUser" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
    </select>
    <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where username = #{userName,jdbcType=VARCHAR}
    </select>
    <select id="findAuthByName" parameterType="java.lang.String" resultType="com.entity.UserRolePermission">
        select n.userid,n.roleid,n.status,t.pid, u.username,r.rolename,p.url from user u,role r,permission p,role_permission t,user_role n
        where n.roleid = r.id
        and n.userid = u.id
        and n.status="y"
        and t.pid = p.id
        and t.rid = r.id
        and u.username = #{username,jdbcType=VARCHAR}
    </select>
    <select id="findAllAuth" resultType="com.entity.UserRolePermission">
        select n.userid,n.roleid,n.status,t.pid,u.username,r.rolename,p.url from user u,role r,permission p,role_permission t,user_role n
        where n.roleid = r.id
        and n.userid = u.id
        and n.status="y"
        and t.pid = p.id
        and t.rid = r.id
    </select>
</mapper>